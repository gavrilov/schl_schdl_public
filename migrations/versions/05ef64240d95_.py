"""empty message

Revision ID: 05ef64240d95
Revises: 7a3ef78eeccb
Create Date: 2018-12-03 16:25:36.733190

"""
import datetime

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = '05ef64240d95'
down_revision = '7a3ef78eeccb'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    migration_helper = op.create_table('enrollments_migration',
                                       sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                                       sa.Column('student_id', sa.Integer(), nullable=True),
                                       sa.Column('class_id', sa.Integer(), nullable=True),
                                       sa.Column('timestamp', sa.DateTime(), nullable=True),
                                       sa.Column('note', sa.Unicode(length=2048), nullable=True),
                                       sa.Column('current', sa.Boolean(), nullable=True),
                                       sa.ForeignKeyConstraint(['class_id'], ['classes.id'], ),
                                       sa.ForeignKeyConstraint(['student_id'], ['students.id'], ),
                                       sa.PrimaryKeyConstraint('id')
                                       )
    # migrate data from enrollments to enrollments_migration
    conn = op.get_bind()
    res = conn.execute("select student_id, class_id from enrollments")
    results = res.fetchall()
    enrollments_data = [{'student_id': r[0], 'class_id': r[1], 'current': True, 'timestamp': datetime.datetime.utcnow()}
                        for r in results]
    op.bulk_insert(migration_helper, enrollments_data)
    # delete old enrollments table
    op.drop_table('enrollments')
    # rename enrollments_migration to enrollments
    op.rename_table('enrollments_migration', 'enrollments')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    migration_helper = op.create_table('enrollments_migration',
                                       sa.Column('student_id', sa.INTEGER(), autoincrement=False, nullable=True),
                                       sa.Column('class_id', sa.INTEGER(), autoincrement=False, nullable=True),
                                       sa.ForeignKeyConstraint(['class_id'], ['classes.id'],
                                                               name='enrollments_class_id_fkey'),
                                       sa.ForeignKeyConstraint(['student_id'], ['students.id'],
                                                               name='enrollments_student_id_fkey')
                                       )
    # migrate data from enrollments to enrollments_migration
    conn = op.get_bind()
    res = conn.execute("select student_id, class_id from enrollments")
    results = res.fetchall()
    enrollments_data = [{'student_id': r[0], 'class_id': r[1]}
                        for r in results]
    op.bulk_insert(migration_helper, enrollments_data)
    # delete old enrollments table
    op.drop_table('enrollments')
    # rename enrollments_migration to enrollments
    op.rename_table('enrollments_migration', 'enrollments')
    # ### end Alembic commands ###
