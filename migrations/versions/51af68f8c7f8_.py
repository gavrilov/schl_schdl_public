"""empty message

Revision ID: 51af68f8c7f8
Revises: eda082b3b0c4
Create Date: 2019-06-04 16:26:38.561187

"""
from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = '51af68f8c7f8'
down_revision = 'eda082b3b0c4'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    migration_helper = op.create_table('payrolls',
                                       sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                                       sa.Column('teacher_id', sa.Integer(), nullable=False),
                                       sa.Column('event_id', sa.Integer(), nullable=False),
                                       sa.Column('payrate', sa.Numeric(scale=2), nullable=True),
                                       sa.Column('note', sa.Unicode(length=2048), nullable=True),
                                       sa.Column('current', sa.Boolean(), nullable=True),
                                       sa.ForeignKeyConstraint(['event_id'], ['events.id'], ),
                                       sa.ForeignKeyConstraint(['teacher_id'], ['teachers.id'], ),
                                       sa.PrimaryKeyConstraint('id', 'teacher_id', 'event_id')
                                       )
    # migrate data from events_teachers to payroll
    conn = op.get_bind()
    res = conn.execute("select teacher_id, event_id from events_teachers")
    results = res.fetchall()
    payrolls_data = [{'teacher_id': r[0], 'event_id': r[1], 'paid': False, 'payrate': 0}
                     for r in results]
    op.bulk_insert(migration_helper, payrolls_data)
    # delete old table
    op.drop_table('events_teachers')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    migration_helper = op.create_table('events_teachers',
                    sa.Column('teacher_id', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('event_id', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.ForeignKeyConstraint(['event_id'], ['events.id'], name='events_teachers_event_id_fkey'),
                    sa.ForeignKeyConstraint(['teacher_id'], ['teachers.id'], name='events_teachers_teacher_id_fkey')
                    )
    # migrate data from payroll to events_teachers
    conn = op.get_bind()
    res = conn.execute("select teacher_id, event_id from payrolls")
    results = res.fetchall()
    payrolls_data = [{'teacher_id': r[0], 'event_id': r[1]}
                     for r in results]
    op.bulk_insert(migration_helper, payrolls_data)

    op.drop_table('payrolls')
    # ### end Alembic commands ###
