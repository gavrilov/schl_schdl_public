"""empty message

Revision ID: 3a7516a4cc6a
Revises: 
Create Date: 2018-11-06 09:33:42.265512

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = '3a7516a4cc6a'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('roles',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(length=80), nullable=True),
                    sa.Column('description', sa.String(length=255), nullable=True),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('name')
                    )
    op.create_table('schools',
                    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('name', sa.Unicode(length=2048), nullable=True),
                    sa.Column('director_name', sa.Unicode(length=2048), nullable=True),
                    sa.Column('note', sa.Unicode(length=2048), nullable=True),
                    sa.Column('current', sa.Boolean(), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('subjects',
                    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('name', sa.Unicode(length=2048), nullable=True),
                    sa.Column('current', sa.Boolean(), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('users',
                    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('stripe_id', sa.Unicode(length=2048), nullable=True),
                    sa.Column('email', sa.Unicode(length=2048), nullable=True),
                    sa.Column('first_name', sa.Unicode(length=2048), nullable=True),
                    sa.Column('last_name', sa.Unicode(length=2048), nullable=True),
                    sa.Column('password', sa.Unicode(length=2048), nullable=True),
                    sa.Column('active', sa.Boolean(), nullable=True),
                    sa.Column('confirmed_at', sa.DateTime(), nullable=True),
                    sa.Column('note', sa.Unicode(length=2048), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('roles_users',
                    sa.Column('user_id', sa.Integer(), nullable=True),
                    sa.Column('role_id', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], )
                    )
    op.create_table('schools_users',
                    sa.Column('user_id', sa.Integer(), nullable=True),
                    sa.Column('school_id', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['school_id'], ['schools.id'], ),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], )
                    )
    op.create_table('students',
                    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('first_name', sa.Unicode(length=2048), nullable=True),
                    sa.Column('last_name', sa.Unicode(length=2048), nullable=True),
                    sa.Column('gender', sa.Integer(), nullable=True),
                    sa.Column('dob', sa.DateTime(), nullable=True),
                    sa.Column('note', sa.Unicode(length=2048), nullable=True),
                    sa.Column('user_id', sa.Integer(), nullable=True),
                    sa.Column('default_school_id', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['default_school_id'], ['schools.id'], ),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('teachers',
                    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('user_id', sa.Integer(), nullable=True),
                    sa.Column('note', sa.Unicode(length=2048), nullable=True),
                    sa.Column('current', sa.Boolean(), nullable=True),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('user_id')
                    )
    op.create_table('usercontacts',
                    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('user_id', sa.Integer(), nullable=True),
                    sa.Column('nickname', sa.Unicode(length=2048), nullable=True),
                    sa.Column('note', sa.Unicode(length=2048), nullable=True),
                    sa.Column('email', sa.Unicode(length=2048), nullable=True),
                    sa.Column('phone', sa.Unicode(length=2048), nullable=True),
                    sa.Column('address1', sa.Unicode(length=2048), nullable=True),
                    sa.Column('address2', sa.Unicode(length=2048), nullable=True),
                    sa.Column('city', sa.Unicode(length=2048), nullable=True),
                    sa.Column('state', sa.Unicode(length=2048), nullable=True),
                    sa.Column('zip', sa.Unicode(length=2048), nullable=True),
                    sa.Column('contact_by_email', sa.Boolean(), nullable=True),
                    sa.Column('contact_by_txt', sa.Boolean(), nullable=True),
                    sa.Column('contact_by_mail', sa.Boolean(), nullable=True),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_usercontacts_phone'), 'usercontacts', ['phone'], unique=False)
    op.create_table('classes',
                    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('school_id', sa.Integer(), nullable=True),
                    sa.Column('teacher_id', sa.Integer(), nullable=True),
                    sa.Column('subject_id', sa.Integer(), nullable=True),
                    sa.Column('current', sa.Boolean(), nullable=True),
                    sa.Column('info', sa.Unicode(length=10240), nullable=True),
                    sa.Column('price', sa.Numeric(scale=2), nullable=True),
                    sa.Column('registration_start', sa.DateTime(), nullable=True),
                    sa.Column('registration_end', sa.DateTime(), nullable=True),
                    sa.Column('grade_limit_from', sa.Integer(), nullable=True),
                    sa.Column('grade_limit_to', sa.Integer(), nullable=True),
                    sa.Column('age_limit_from', sa.Integer(), nullable=True),
                    sa.Column('age_limit_to', sa.Integer(), nullable=True),
                    sa.Column('billing_rate', sa.Numeric(scale=2), nullable=True),
                    sa.Column('payrate', sa.Numeric(scale=2), nullable=True),
                    sa.Column('class_start', sa.DateTime(), nullable=True),
                    sa.Column('class_end', sa.DateTime(), nullable=True),
                    sa.Column('class_time_start', sa.Time(), nullable=True),
                    sa.Column('class_time_end', sa.Time(), nullable=True),
                    sa.ForeignKeyConstraint(['school_id'], ['schools.id'], ),
                    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], ),
                    sa.ForeignKeyConstraint(['teacher_id'], ['teachers.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('enrollments',
                    sa.Column('student_id', sa.Integer(), nullable=True),
                    sa.Column('class_id', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['class_id'], ['classes.id'], ),
                    sa.ForeignKeyConstraint(['student_id'], ['students.id'], )
                    )
    op.create_table('events',
                    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('class_id', sa.Integer(), nullable=True),
                    sa.Column('teacher_id', sa.Integer(), nullable=True),
                    sa.Column('note', sa.Unicode(length=2048), nullable=True),
                    sa.ForeignKeyConstraint(['class_id'], ['classes.id'], ),
                    sa.ForeignKeyConstraint(['teacher_id'], ['teachers.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('events')
    op.drop_table('enrollments')
    op.drop_table('classes')
    op.drop_index(op.f('ix_usercontacts_phone'), table_name='usercontacts')
    op.drop_table('usercontacts')
    op.drop_table('teachers')
    op.drop_table('students')
    op.drop_table('schools_users')
    op.drop_table('roles_users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_table('subjects')
    op.drop_table('schools')
    op.drop_table('roles')
    # ### end Alembic commands ###
